@model BlogVM

@section header{
<style>
    .parent_comment {
        background: #ffd333;
        color: #3d464d;
        outline: hidden;
    }

        .parent_comment:hover {
        }
</style>
}

<div id="child_comment_modal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Replay</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="comment_child_send">
                    <div class="form-group">
                        @Html.AntiForgeryToken()
                        <textarea placeholder="Comment *" class="form-control" id="comment_child_content" rows="6"></textarea>
                        <span id="error_text_child" class="d-block my-2 text-danger"></span>
                    </div>
                    <input type="hidden" id="parent_id" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button form="comment_child_send" type="submit" class="btn btn-primary"> Post Comment</button>
            </div>
        </div>
    </div>
</div>


<div class="site__body">
    <div class="page-header">
        <div class="page-header__container container">
            <div class="page-header__breadcrumb">
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-controller="Home" asp-action="Index">Home</a>
                            <svg class="breadcrumb-arrow"
                                 width="6px" height="9px">
                                <use xlink:href="/images/sprite.svg#arrow-rounded-right-6x9"></use>
                            </svg>
                        </li>
                        <li class="breadcrumb-item">
                            <a asp-controller="Blog" asp-action="Index">Blog</a>
                            <svg class="breadcrumb-arrow"
                                 width="6px" height="9px">
                                <use xlink:href="/images/sprite.svg#arrow-rounded-right-6x9"></use>
                            </svg>
                        </li>
                        <li class="breadcrumb-item active" aria-current="page">@Model.Blog.Category.Name</li>
                    </ol>
                </nav>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-12 col-lg-8">
                <div class="block post post--layout--classic">
                    <div class="post__header post-header post-header--layout--classic">
                        <div class="post-header__categories"><a href="/BlogAsistant/BlogListByCategory/@Model.Blog.Category.Id">@Model.Blog.Category.Name</a></div>
                        <h1 class="post-header__title">
                            @Model.Blog.Title
                        </h1>
                        <div class="post-header__meta">
                            <div class="post-header__meta-item">By <a href="#">@Model.Blog.User.FullName</a></div>
                            <div class="post-header__meta-item">@Model.Blog.Date.ToString("M"), @Model.Blog.Date.Year</div>
                            <div class="post-header__meta-item"><a href="#comment_header">@Model.CommentCount Comments</a></div>
                        </div>
                    </div>
                    <div class="post__featured"><a href="~/images/posts/@Model.Blog.Image"><img src="~/images/posts/@Model.Blog.Image" alt=""></a></div>
                    <div class="post__content typography">
                        @Html.Raw(Model.Blog.Detail.Description)
                    </div>
                    <div class="post__footer">
                        <div class="post__tags-share-links">
                            <div class="post__tags tags">
                                <div class="tags__list">
                                    @foreach (var item in Model.Tags)
                                    {
                                        <a asp-controller="BlogFilter" asp-action="BlogListByTag" asp-route-id="@item.Id">@item.Name</a>
                                    }
                                </div>
                            </div>
                            <div class="post__share-links share-links">
                                <ul class="share-links__list">
                                    @*<li class="share-links__item share-links__item--type--like"><a
                                        href="#">Like</a></li>
                                        <li class="share-links__item share-links__item--type--tweet"><a
                                        href="#">Tweet</a></li>
                                        <li class="share-links__item share-links__item--type--pin"><a href="#">Pin
                                        It</a></li>
                                        <li class="share-links__item share-links__item--type--counter"><a
                                        href="#">4K</a></li>*@
                                </ul>
                            </div>
                        </div>
                        <div class="post-author">
                            <div class="post-author__avatar">
                                <a href="#">
                                    <img src="~/images/avatars/@Model.Blog.User.Image"
                                         alt="">
                                </a>
                            </div>
                            <div class="post-author__info">
                                <div class="post-author__name"><a href="#">@Model.Blog.User.FullName</a></div>
                                <div class="post-author__about">@Model.Blog.User.Description</div>
                            </div>
                        </div>
                    </div>
                    <section class="post__section">
                        @await Component.InvokeAsync("RelatedBlog",Model.Blog.CategoryId)
                    </section>
                    <section class="post__section">
                        <h4 id="comment_header" class="post__section-title">Comments (@Model.CommentCount)</h4>
                        <ol class="comments-list comments-list--level--0">

                            @foreach (var item in Model.Comments)
                            {
                                <li class="comments-list__item">
                                    <div class="comment">
                                        <div class="comment__avatar">
                                            <a href="#">
                                                <img src="~/images/avatars/@item.User.Image" alt="">
                                            </a>
                                        </div>
                                        <div class="comment__content">
                                            <div class="comment__header">
                                                <div class="comment__author"><a href="#">@item.User.FullName</a></div>
                                                <div class="comment__reply">
                                                    <button type="button" class="btn btn_replay btn-xs btn-light"
                                                        data-id="@item.Id" data-username="@item.User.FullName" data-toggle="modal" data-target="#child_comment_modal">
                                                        Reply
                                                    </button>
                                                </div>
                                            </div>
                                            <div class="comment__text">
                                                @item.Description
                                            </div>
                                            <div class="comment__date">@item.Date.ToString("M"), @item.Date.Year</div>
                                        </div>
                                    </div>
                                    @if (item.IsChild)
                                    {
                                        <div>
                                            <button data-id="@item.Id" data-index="1" class="btn float-right btn_see_more_answer btn-primary">See Answers</button>
                                            <div class="clearfix"></div>
                                        </div>
                                    }
                                </li>
                            }
                        </ol>
                        @if (@Model.CommentCount > 5)
                        {
                            <button data-id="@Model.Blog.Id" data-index="2" class="btn btn-secondary parent_comment btn-block">See Comment</button>
                        }
                    </section>
                    <section class="post__section">
                        <h4 class="post__section-title">Write A Comment</h4>
                        <form id="comment_send">
                            <div class="form-group">
                                @Html.AntiForgeryToken()
                                <textarea placeholder="Comment *" class="form-control" id="comment-content" rows="6"></textarea>
                                <span id="error_text" class="d-block my-2 text-danger"></span>
                            </div>
                            <input id="user_name" type="hidden" value="@User.Identity.Name" />
                            <input id="blog_id" type="hidden" value="@Model.Blog.Id" />
                            <div class="form-group mt-4">
                                <button type="submit"
                                        class="btn btn-primary btn-lg">
                                    Post Comment
                                </button>
                            </div>
                        </form>
                    </section>
                </div>
            </div>
            <div class="col-12 col-lg-4">
                @await Component.InvokeAsync("BlogRightSideBar")
            </div>
        </div>
    </div>
</div>

@section script{

@*Leave Create Comment Ajax *@
<script>


    $(document).ready(function () {
           $(document).on('submit', '#comment_send', (e) => {
               e.preventDefault();
               let Comment = $("#comment-content").val()
               let UserName = $("#user_name").val()
               let blogid = $("#blog_id").val()
               let errorText = document.querySelector("#error_text")

               if(!CommentValidation(Comment,UserName,errorText)){
                   return;
               }

               let wait = Swal.fire({
                   title: 'Give me a second.',
                   text: '"',
                   imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                   imageWidth: 400,
                   imageHeight: 350,
                   imageAlt: 'Loading',
               })

               $.ajax({
                   url: '/BlogComment/Create',
                   headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                   type: 'POST',
                   data: { UserId: UserName, Description: Comment, BlogId: blogid },
                   success: (response) => {
                       if (response.hasOwnProperty('status') && response.status === 201) {
                           // Comment Success
                           wait.close()
                           Swal.fire(
                               'Comment Accept',
                               '',
                               'success'
                           )
                           // Reload
                           setTimeout(() => {
                               location.reload();
                           }, 2000)

                       } else if (response.status == 403) {
                           wait.close()
                           Swal.fire(
                               'Plase Sign In',
                               '',
                               'error'
                           )
                       } else {
                           wait.close()
                           Swal.fire(
                               'Not Added',
                               '',
                               'error'
                           )
                       }
                   }
               })
           })
       })
</script>

@*Child Create Comment Ajax *@
<script>
    $(document).ready(function () {
           $(document).on('submit', '#child_comment_modal', (e) => {
               e.preventDefault();
               let Comment = $("#comment_child_content").val()
               let UserName = $("#user_name").val()
               let blogid = $("#blog_id").val()
               let parentId = $("#parent_id").val()
               let errorText = document.querySelector("#error_text_child")

               if(!CommentValidation(Comment,UserName,errorText)){
                   return;
               }

               let wait = Swal.fire({
                   title: 'Give me a second.',
                   text: '"',
                   imageUrl: 'https://media.giphy.com/media/xTkcEQACH24SMPxIQg/giphy.gif',
                   imageWidth: 400,
                   imageHeight: 350,
                   imageAlt: 'Loading',
               })

               $.ajax({
                   url: '/BlogComment/Create',
                   headers: {
                       "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                   },
                   type: 'POST',
                   data: { UserId: UserName, Description: Comment, BlogId: blogid,ParentId:parentId},
                   success: (response) => {
                       if (response.hasOwnProperty('status') && response.status === 201) {
                           // Comment Success
                           wait.close()
                           Swal.fire(
                               'Comment Accept',
                               '',
                               'success'
                           )
                           // Reload
                           setTimeout(() => {
                               location.reload();
                           }, 2000)

                       } else if (response.status == 403) {
                           wait.close()
                           Swal.fire(
                               'Plase Sign In',
                               '',
                               'error'
                           )
                       } else {
                           wait.close()
                           Swal.fire(
                               'Not Added',
                               '',
                               'error'
                           )
                       }
                   }
               })
           })
       })
</script>

@*See Answer Ajax*@
<script>
    $(document).ready(function () {
        $(document).on("click",".btn_see_more_answer",(e)=>{
            let btn = e.currentTarget;
            let parentId = $(btn).attr("data-id");
            let index = $(btn).attr("data-index");

            $.ajax({
                  url: '/BlogComment/GetChildComment',
                  type: 'GET',
                  data: { parentId:parentId,index:index },
                  success: (response) => {
                      if(response.hasOwnProperty('status') && response.status === 404) {
                          // Comment Success

                          Swal.fire(
                              'Not Found More Comment',
                              '',
                              'error'
                          );
                      }else{

                          let container = btn.parentElement
                          if(response.length === 0){
                              container.parentElement.removeChild(container)
                              return;
                          }
                          GenerateChildComment(response,container)
                          if(response.length < 5){
                              container.parentElement.removeChild(container)
                          }else{
                              $(btn).attr("data-index",new Number(index)+1)
                          }
                      }
                  }
              });
        });
    });
</script>

@* Child Comment Genreate*@
<script>
    function GenerateChildComment(childCommentList,Container){
        let ol = document.createElement("ol")
        $(ol).attr("class","comments-list comments-list--level--1")

        childCommentList.forEach(e=>{
            let li = document.createElement("li")
            $(li).attr("class","comments-list__item")
            let date = new Date(e.date).toDateString()
            let html = `
                <div class="comment">
                    <div class="comment__avatar"><a href="#">
                        <img src="/images/avatars/${e.image}" alt=""></a>
                     </div>
                    <div class="comment__content">
                        <div class="comment__header">
                            <div class="comment__author">
                                <a href="#">${e.fullName}</a>
                            </div>
                            <div class="comment__reply">
                                 <button type="button" class="btn btn_replay btn-xs btn-light"
                                    data-id="${e.id}" data-username="${e.fullName}" data-toggle="modal" data-target="#child_comment_modal">
                                    Reply
                                </button>
                            </div>
                        </div>
                        <div class="comment__text">
                           ${e.description}
                        </div>
                        <div class="comment__date">${date}</div>
                    </div>
                </div>
            `
            if(e.isChild){
                html = html + `
                    <div>
                        <button data-id="${e.id}" data-index="1" class="btn float-right btn_see_more_answer btn-primary">See More Answer</button>
                        <div class="clearfix"></div>
                    </div>
                `
            }

            $(li).html(html)
            ol.appendChild(li);
        });
        let div = document.createElement("div")
        $(div).attr("comment-list__children")
        div.appendChild(ol)
        Container.parentElement.appendChild(div)
    };
</script>


@*See Comment Btn*@
<script>
    $(document).ready(()=>{
        $(document).on("click",".parent_comment",(e)=>{
            let btn  = e.currentTarget
            let blogId = $(btn).data("id")
            let index = $(btn).data("index")
           $.ajax({
               url:"/BlogComment/GetMoreComment",
               type:"GET",
               data:{blogId:blogId,commentSectionIndex:index},
               success:(response)=>{
                   if (response.hasOwnProperty('status') && response.status === 404) {
                         Swal.fire(
                               'Not Found Comment',
                               '',
                               'error'
                           )
                   }else{
                          let container = document.querySelector("#comment_header~ol")
                          if(response.length === 0){
                              btn.parentElement.removeChild(btn)
                              return;
                          }
                          GenerateComment(response,container)
                          if(response.length < 5){
                              btn.parentElement.removeChild(btn)
                          }else{
                              $(btn).attr("data-index",new Number(index)+1)
                          }
                   }
               }

           })
        })
    });
</script>

@*Comment Generator*@
<script>
    function GenerateComment(response,container){
         response.forEach(e=>{
            let li = document.createElement("li")
            $(li).attr("class","comments-list__item")
            let date = new Date(e.date).toDateString()
            let html = `
                <div class="comment">
                    <div class="comment__avatar"><a href="#">
                        <img src="/images/avatars/${e.image}" alt=""></a>
                     </div>
                    <div class="comment__content">
                        <div class="comment__header">
                            <div class="comment__author">
                                <a href="#">${e.fullName}</a>
                            </div>
                            <div class="comment__reply">
                                 <button type="button" class="btn btn_replay btn-xs btn-light"
                                    data-id="${e.id}" data-username="${e.fullName}" data-toggle="modal" data-target="#child_comment_modal">
                                    Reply
                                </button>
                            </div>
                        </div>
                        <div class="comment__text">
                           ${e.description}
                        </div>
                        <div class="comment__date">${date}</div>
                    </div>
                </div>
            `
            if(e.isChild){
                html = html + `
                    <div>
                        <button data-id="${e.id}" data-index="1" class="btn float-right btn_see_more_answer btn-primary">See More Answer</button>
                        <div class="clearfix"></div>
                    </div>
                `
            }
            $(li).html(html)
            container.appendChild(li);
        });
    }

</script>

@*Replay Click Event*@
<script>
    $(document).ready(function () {
        $(document).on("click",".btn_replay",(e)=>{
            let userName = $(e.currentTarget).attr("data-username");
            let parentId = $(e.currentTarget).attr("data-id");
            $("#parent_id").attr("value",parentId)
            $(".modal-title").text(userName +" Replay")
        });
    });
</script>

@*Comment Validation*@
<script>
    function CommentValidation(Comment,UserName,errorText){
        if (!Comment || Comment == undefined || Comment == "" || Comment.length == 0) {
            errorText.innerHTML = "Please Comment Add"
            return false;
        }

        if (Comment.length < 3) {
            errorText.innerHTML = "Mimum Comment Character 2"
            return false;
        }

        if (UserName.length == 0) {
            errorText.innerHTML = "Please Sign In Or Sign Up"
            return false;
        }
        return true;
    }
</script>

@*Before Insert*@
<script>
    function insertAfter(newNode, existingNode) {
        existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);
    }
</script>

}